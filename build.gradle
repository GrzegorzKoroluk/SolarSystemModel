plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'pl.nullpointerexception'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

compileJava {
	options.compilerArgs << '-parameters'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'com.auth0:java-jwt:3.8.3'

	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

	runtimeOnly 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

task generatePostsAndComments() {
	doLast {
		File dataSql = file("src/main/resources/data.sql")
		dataSql.write("")

		for (int i = 1; i <= 10; i++) {
			dataSql.append("insert into PLANET(id, name, distance, mass, created) " +
					"values (${i}, 'Planet ${i}', ${i * 2000}, ${i * 100}, '"+ LocalDateTime.now().minusDays(100 - i) +"');\n")
		}

		for (int i = 1; i <= 10; i++) {
			int planetId = i;
			dataSql.append("insert into SATELLITE(id, planet_id, name, distance, mass, created) " +
					"values (${i}, ${planetId}, 'Satellite ${i}', ${i * 2000}, ${i * 100}, '"+ LocalDateTime.now().minusDays(100 - i) +"');\n")
		}

	}
}